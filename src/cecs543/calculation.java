/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cecs543;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Ankush
 */
public class calculation extends javax.swing.JPanel {

    /**
     * Creates new form test2
     */
    public Integer visible=0;
    static Integer totalClassCount=0;
    public Integer q1=0;
    public Integer q2=0;
    public Integer q3=0;
    public Integer q4=0;
    public Integer q5=0;
    public Integer q6=0;
    public Integer q7=0;
    public Integer q8=0;
    public Integer q9=0;
    public Integer q10=0;
    public Integer q11=0;
    public Integer q12=0;
    public Integer q13=0;
    public Integer q14=0;
    public FP fp;
    public int vafscore = 0;
    public String TabName;
    public calculation(FP fp) {
        initComponents();
        this.fp = fp;
        visible = 1;
        totalClassCount += 1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpEI = new javax.swing.ButtonGroup();
        btnGrpEO = new javax.swing.ButtonGroup();
        btnGrpEInq = new javax.swing.ButtonGroup();
        btnGrpILF = new javax.swing.ButtonGroup();
        btnGrpEIF = new javax.swing.ButtonGroup();
        pnlFunctionPoint = new javax.swing.JPanel();
        lblEI = new javax.swing.JLabel();
        lblEO = new javax.swing.JLabel();
        lblEInq = new javax.swing.JLabel();
        lblILF = new javax.swing.JLabel();
        lblEIF = new javax.swing.JLabel();
        lblTotalCount = new javax.swing.JLabel();
        lblSimple = new javax.swing.JLabel();
        lblAverage = new javax.swing.JLabel();
        lblComplex = new javax.swing.JLabel();
        txtEI = new javax.swing.JTextField();
        txtEO = new javax.swing.JTextField();
        txtEInq = new javax.swing.JTextField();
        txtILF = new javax.swing.JTextField();
        txtEIF = new javax.swing.JTextField();
        rBtnSEI = new javax.swing.JRadioButton();
        rBtnAEI = new javax.swing.JRadioButton();
        rBtnCEI = new javax.swing.JRadioButton();
        rBtnSEO = new javax.swing.JRadioButton();
        rBtnAEO = new javax.swing.JRadioButton();
        rBtnCEO = new javax.swing.JRadioButton();
        rBtnSEInq = new javax.swing.JRadioButton();
        rBtnAEInq = new javax.swing.JRadioButton();
        rBtnCEInq = new javax.swing.JRadioButton();
        rBtnSILF = new javax.swing.JRadioButton();
        rBtnAILF = new javax.swing.JRadioButton();
        rBtnCILF = new javax.swing.JRadioButton();
        rBtnSEIF = new javax.swing.JRadioButton();
        rBtnAEIF = new javax.swing.JRadioButton();
        rBtnCEIF = new javax.swing.JRadioButton();
        txtEICalc = new javax.swing.JTextField();
        txtEOCalc = new javax.swing.JTextField();
        txtEInqCalc = new javax.swing.JTextField();
        txtILFCalc = new javax.swing.JTextField();
        txtEIFCalc = new javax.swing.JTextField();
        lblWF = new javax.swing.JLabel();
        txtTCCalc = new javax.swing.JTextField();
        btnComputeFP = new javax.swing.JButton();
        btnVA = new javax.swing.JButton();
        btnCCS = new javax.swing.JButton();
        btnChangeLang = new javax.swing.JButton();
        txtComputeFP = new javax.swing.JTextField();
        txtVA = new javax.swing.JTextField();
        txtCCS = new javax.swing.JTextField();
        txtLang = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        lblEI.setText("External Inputs");

        lblEO.setText("External Outputs");

        lblEInq.setText("External Inquiries");

        lblILF.setText("Internal Logical Files");

        lblEIF.setText("External Interface Files");

        lblTotalCount.setText("Total Count");

        lblSimple.setText("Simple");

        lblAverage.setText("Average");

        lblComplex.setText("Complex");

        txtEI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEIFocusLost(evt);
            }
        });
        txtEI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEIActionPerformed(evt);
            }
        });

        txtEO.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEOFocusLost(evt);
            }
        });

        txtEInq.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEInqFocusLost(evt);
            }
        });

        txtILF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtILFFocusLost(evt);
            }
        });

        txtEIF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEIFFocusLost(evt);
            }
        });

        btnGrpEI.add(rBtnSEI);
        rBtnSEI.setText("3");

        btnGrpEI.add(rBtnAEI);
        rBtnAEI.setSelected(true);
        rBtnAEI.setText("4");

        btnGrpEI.add(rBtnCEI);
        rBtnCEI.setText("6");

        btnGrpEO.add(rBtnSEO);
        rBtnSEO.setText("4");

        btnGrpEO.add(rBtnAEO);
        rBtnAEO.setSelected(true);
        rBtnAEO.setText("5");

        btnGrpEO.add(rBtnCEO);
        rBtnCEO.setText("7");

        btnGrpEInq.add(rBtnSEInq);
        rBtnSEInq.setText("3");

        btnGrpEInq.add(rBtnAEInq);
        rBtnAEInq.setSelected(true);
        rBtnAEInq.setText("4");

        btnGrpEInq.add(rBtnCEInq);
        rBtnCEInq.setText("6");

        btnGrpILF.add(rBtnSILF);
        rBtnSILF.setText("7");

        btnGrpILF.add(rBtnAILF);
        rBtnAILF.setSelected(true);
        rBtnAILF.setText("10");

        btnGrpILF.add(rBtnCILF);
        rBtnCILF.setText("15");

        btnGrpEIF.add(rBtnSEIF);
        rBtnSEIF.setText("5");

        btnGrpEIF.add(rBtnAEIF);
        rBtnAEIF.setSelected(true);
        rBtnAEIF.setText("7");

        btnGrpEIF.add(rBtnCEIF);
        rBtnCEIF.setText("10");

        txtEICalc.setEditable(false);
        txtEICalc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtEOCalc.setEditable(false);
        txtEOCalc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtEInqCalc.setEditable(false);
        txtEInqCalc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtILFCalc.setEditable(false);
        txtILFCalc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtEIFCalc.setEditable(false);
        txtEIFCalc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lblWF.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWF.setText("Weighting Factors");
        lblWF.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtTCCalc.setEditable(false);
        txtTCCalc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        btnComputeFP.setLabel("Compute FP");
        btnComputeFP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComputeFPActionPerformed(evt);
            }
        });

        btnVA.setLabel("Value Adjustments");
        btnVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVAActionPerformed(evt);
            }
        });

        btnCCS.setLabel("Compute Code Size");
        btnCCS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCCSActionPerformed(evt);
            }
        });

        btnChangeLang.setLabel("Change Language");
        btnChangeLang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeLangActionPerformed(evt);
            }
        });

        txtComputeFP.setEditable(false);
        txtComputeFP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtVA.setEditable(false);
        txtVA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtVA.setText("0");
        txtVA.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVAActionPerformed(evt);
            }
        });

        txtCCS.setEditable(false);
        txtCCS.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtLang.setEditable(false);

        jLabel1.setText("Current Language");

        javax.swing.GroupLayout pnlFunctionPointLayout = new javax.swing.GroupLayout(pnlFunctionPoint);
        pnlFunctionPoint.setLayout(pnlFunctionPointLayout);
        pnlFunctionPointLayout.setHorizontalGroup(
            pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFunctionPointLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotalCount)
                    .addGroup(pnlFunctionPointLayout.createSequentialGroup()
                        .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblWF)
                            .addGroup(pnlFunctionPointLayout.createSequentialGroup()
                                .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlFunctionPointLayout.createSequentialGroup()
                                        .addComponent(lblEI)
                                        .addGap(58, 58, 58)
                                        .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtEI, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                                            .addComponent(txtEO)
                                            .addComponent(txtEInq)
                                            .addComponent(txtILF)))
                                    .addComponent(lblEO)
                                    .addComponent(lblEInq)
                                    .addComponent(lblILF)
                                    .addGroup(pnlFunctionPointLayout.createSequentialGroup()
                                        .addComponent(lblEIF)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtEIF, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(55, 55, 55)
                                .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSimple)
                                    .addComponent(rBtnSEI)
                                    .addComponent(rBtnSEO)
                                    .addComponent(rBtnSEInq)
                                    .addComponent(rBtnSILF)
                                    .addComponent(rBtnSEIF))
                                .addGap(49, 49, 49)
                                .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAverage)
                                    .addComponent(rBtnAEI)
                                    .addComponent(rBtnAEO)
                                    .addComponent(rBtnAEInq)
                                    .addComponent(rBtnAILF)
                                    .addComponent(rBtnAEIF))))
                        .addGap(43, 43, 43)
                        .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblComplex)
                            .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtComputeFP, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pnlFunctionPointLayout.createSequentialGroup()
                                    .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rBtnCEI)
                                        .addComponent(rBtnCEO)
                                        .addComponent(rBtnCEInq)
                                        .addComponent(rBtnCILF)
                                        .addComponent(rBtnCEIF))
                                    .addGap(62, 62, 62)
                                    .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtTCCalc, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                        .addComponent(txtEICalc)
                                        .addComponent(txtEOCalc)
                                        .addComponent(txtEInqCalc)
                                        .addComponent(txtILFCalc)
                                        .addComponent(txtEIFCalc)))
                                .addComponent(txtVA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCCS, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnComputeFP)
                    .addComponent(btnVA)
                    .addComponent(btnChangeLang)
                    .addGroup(pnlFunctionPointLayout.createSequentialGroup()
                        .addComponent(btnCCS)
                        .addGap(72, 72, 72)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLang, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        pnlFunctionPointLayout.setVerticalGroup(
            pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFunctionPointLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblWF)
                .addGap(27, 27, 27)
                .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblComplex, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSimple)
                        .addComponent(lblAverage)))
                .addGap(23, 23, 23)
                .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlFunctionPointLayout.createSequentialGroup()
                        .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlFunctionPointLayout.createSequentialGroup()
                                .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlFunctionPointLayout.createSequentialGroup()
                                        .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblEI)
                                            .addComponent(txtEI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rBtnSEI)
                                            .addComponent(rBtnAEI)
                                            .addComponent(rBtnCEI)
                                            .addComponent(txtEICalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblEO)
                                            .addComponent(txtEO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rBtnSEO)
                                            .addComponent(rBtnAEO)
                                            .addComponent(rBtnCEO)
                                            .addComponent(txtEOCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(19, 19, 19)
                                        .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblEInq)
                                            .addComponent(txtEInq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rBtnSEInq)
                                            .addComponent(rBtnAEInq)
                                            .addComponent(rBtnCEInq)
                                            .addComponent(txtEInqCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblILF)
                                            .addComponent(txtILF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rBtnSILF)
                                            .addComponent(rBtnAILF)
                                            .addComponent(rBtnCILF)
                                            .addComponent(txtILFCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(21, 21, 21)
                                        .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblEIF, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtEIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rBtnSEIF)
                                            .addComponent(rBtnAEIF)
                                            .addComponent(rBtnCEIF)
                                            .addComponent(txtEIFCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(16, 16, 16)
                                        .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblTotalCount)
                                            .addComponent(txtTCCalc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnComputeFP))
                                    .addComponent(txtComputeFP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnVA))
                            .addComponent(txtVA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCCS))
                    .addGroup(pnlFunctionPointLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCCS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtLang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnChangeLang)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFunctionPoint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFunctionPoint, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void txtEIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEIActionPerformed

    public String getLanguage(){
        //System.out.println("Cal vala getLang() " + txtLang.getText());
        return txtLang.getText().toString();
        
    }
    
    
    public void saveFile(FileOutputStream fout, String name){
        int count=0;
        String Newline = "\n";
            try {
                fout =  new FileOutputStream(new File(name), true);
                String nameC = this.getClass().getName();
                fout.write(nameC.getBytes());
                fout.write(Newline.getBytes());
                fout.write(this.TabName.getBytes());
                fout.write(Newline.getBytes());
                String EI = txtEI.getText();
                String EO = txtEO.getText();
                String EInq = txtEInq.getText();
                String ILF = txtILF.getText();
                String EIF = txtEIF.getText();
                String EICalc = txtEICalc.getText();
                String EOCalc = txtEOCalc.getText();
                String EInqCalc = txtEInqCalc.getText();
                String ILFCalc = txtILFCalc.getText();
                String EIFCalc = txtEIFCalc.getText();
                String VA = txtVA.getText();
                String CCS = txtCCS.getText();
                String fpCalc = txtComputeFP.getText();
                String Lang = txtLang.getText();
                String TCCalc  = txtTCCalc.getText();
                String REI = null;
                if(rBtnSEI.isSelected())
                    REI = rBtnSEI.getText();
                if(rBtnAEI.isSelected())
                    REI = rBtnAEI.getText();
                if(rBtnCEI.isSelected())
                    REI = rBtnCEI.getText();
                String REO = null;
                if(rBtnSEO.isSelected())
                    REO = rBtnSEO.getText();
                if(rBtnAEO.isSelected())
                    REO = rBtnAEO.getText();
                if(rBtnCEO.isSelected())
                    REO = rBtnCEO.getText();
                String REInq = null;
                if(rBtnSEInq.isSelected())
                    REInq = rBtnSEInq.getText();
                if(rBtnAEInq.isSelected())
                    REInq = rBtnAEInq.getText();
                if(rBtnCEInq.isSelected())
                    REInq = rBtnCEInq.getText();
                String RILF = null;
                if(rBtnSILF.isSelected())
                    RILF = rBtnSILF.getText();
                if(rBtnAILF.isSelected())
                    RILF = rBtnAILF.getText();
                if(rBtnCILF.isSelected())
                    RILF = rBtnCILF.getText();
                String REIF = null;
                if(rBtnSEIF.isSelected())
                    REIF = rBtnSEIF.getText();
                if(rBtnAEIF.isSelected())
                    REIF = rBtnAEIF.getText();
                if(rBtnCEIF.isSelected())
                    REIF = rBtnCEIF.getText();        
                fout.write(EI.getBytes());
                fout.write(Newline.getBytes());
                fout.write(EO.getBytes());
                fout.write(Newline.getBytes());
                fout.write(EInq.getBytes());
                fout.write(Newline.getBytes());
                fout.write(ILF.getBytes());
                fout.write(Newline.getBytes());
                fout.write(EIF.getBytes());
                fout.write(Newline.getBytes());
            
                fout.write(EICalc.getBytes());
                fout.write(Newline.getBytes());
                fout.write(EOCalc.getBytes());
                fout.write(Newline.getBytes());
                fout.write(EInqCalc.getBytes());
                fout.write(Newline.getBytes());
                fout.write(ILFCalc.getBytes());
                fout.write(Newline.getBytes());
                fout.write(EIFCalc.getBytes());
                fout.write(Newline.getBytes());
                
                fout.write(REI.getBytes());
                fout.write(Newline.getBytes());
                fout.write(REO.getBytes());
                fout.write(Newline.getBytes());
                fout.write(REInq.getBytes());
                //System.out.println("REInq : " + REInq);
                fout.write(Newline.getBytes());
                fout.write(RILF.getBytes());
                fout.write(Newline.getBytes());
                fout.write(REIF.getBytes());
                fout.write(Newline.getBytes());
                
                fout.write(fpCalc.getBytes());
                fout.write(Newline.getBytes());
                fout.write(VA.getBytes());
                fout.write(Newline.getBytes());
                fout.write(CCS.getBytes());
                fout.write(Newline.getBytes());
                fout.write(Lang.getBytes());
                fout.write(Newline.getBytes());
                fout.write(TCCalc.getBytes());
                
                fout.write(Newline.getBytes());
                fout.write(q1.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q2.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q3.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q4.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q5.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q6.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q7.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q8.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q9.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q10.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q11.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q12.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q13.toString().getBytes());
                fout.write(Newline.getBytes());
                fout.write(q14.toString().getBytes());
                fout.write(Newline.getBytes());
                //String asn = fp.TabbedPanel.getName();
                
            }catch( Exception e){
                count=1;
            }
    }
    
    
    private void btnVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVAActionPerformed
        int selectedIndex = fp.TabbedPanel.getSelectedIndex();
        //System.out.println(selectedIndex);
        //calculation c = (calculation) FP.TabbedPanel.getComponentAt(selectedIndex);
        VAF vaf = new VAF(fp);
        vaf.setVisible(true);
        try{
        vaf.cmbBoxQ1.setSelectedIndex(q1);
        vaf.cmbBoxQ2.setSelectedIndex(q2);
        vaf.cmbBoxQ3.setSelectedIndex(q3);
        vaf.cmbBoxQ4.setSelectedIndex(q4);
        vaf.cmbBoxQ5.setSelectedIndex(q5);
        vaf.cmbBoxQ6.setSelectedIndex(q6);
        vaf.cmbBoxQ7.setSelectedIndex(q7);
        vaf.cmbBoxQ8.setSelectedIndex(q8);
        vaf.cmbBoxQ9.setSelectedIndex(q9);
        vaf.cmbBoxQ10.setSelectedIndex(q10);
        vaf.cmbBoxQ11.setSelectedIndex(q11);
        vaf.cmbBoxQ12.setSelectedIndex(q12);
        vaf.cmbBoxQ13.setSelectedIndex(q13);
        vaf.cmbBoxQ14.setSelectedIndex(q14);
        }
        catch(Exception e){
            
        }
        
        

    }//GEN-LAST:event_btnVAActionPerformed

    public void calculationOfFP(){
        try{
        //EI====================================
        
        if ((Integer.parseInt(txtEI.getText()) < 0)||(Integer.parseInt(txtEO.getText()) < 0)||(Integer.parseInt(txtILF.getText()) < 0)||(Integer.parseInt(txtEInq.getText()) < 0)||(Integer.parseInt(txtEIF.getText()) < 0)){
            
        }
        else{
        if (rBtnSEI.isSelected()){
            txtEICalc.setText(Integer.toString(Integer.parseInt(txtEI.getText())*(Integer.parseInt(rBtnSEI.getText()))));
        }
        if (rBtnAEI.isSelected()){
            txtEICalc.setText(Integer.toString(Integer.parseInt(txtEI.getText())*(Integer.parseInt(rBtnAEI.getText()))));
        }
        if (rBtnCEI.isSelected()){
            txtEICalc.setText(Integer.toString(Integer.parseInt(txtEI.getText())*(Integer.parseInt(rBtnCEI.getText()))));
        }
        
        //EO=======================================
        if (rBtnSEO.isSelected()){
            txtEOCalc.setText(Integer.toString(Integer.parseInt(txtEO.getText())*(Integer.parseInt(rBtnSEO.getText()))));
        }
        if (rBtnAEO.isSelected()){
            txtEOCalc.setText(Integer.toString(Integer.parseInt(txtEO.getText())*(Integer.parseInt(rBtnAEO.getText()))));
        }
        if (rBtnCEO.isSelected()){
            txtEOCalc.setText(Integer.toString(Integer.parseInt(txtEO.getText())*(Integer.parseInt(rBtnCEO.getText()))));
        }
        
        //EIQ
        if (rBtnSEInq.isSelected()){
            txtEInqCalc.setText(Integer.toString(Integer.parseInt(txtEInq.getText())*(Integer.parseInt(rBtnSEInq.getText()))));
        }
        if (rBtnAEInq.isSelected()){
            txtEInqCalc.setText(Integer.toString(Integer.parseInt(txtEInq.getText())*(Integer.parseInt(rBtnAEInq.getText()))));
        }
        if (rBtnCEInq.isSelected()){
            txtEInqCalc.setText(Integer.toString(Integer.parseInt(txtEInq.getText())*(Integer.parseInt(rBtnCEInq.getText()))));
        }
        
        //ILF==========================================
        if (rBtnSILF.isSelected()){
            txtILFCalc.setText(Integer.toString(Integer.parseInt(txtILF.getText())*(Integer.parseInt(rBtnSILF.getText()))));
        }
        if (rBtnAILF.isSelected()){
            txtILFCalc.setText(Integer.toString(Integer.parseInt(txtILF.getText())*(Integer.parseInt(rBtnAILF.getText()))));
        }
        if (rBtnCILF.isSelected()){
            txtILFCalc.setText(Integer.toString(Integer.parseInt(txtILF.getText())*(Integer.parseInt(rBtnCILF.getText()))));
        }
        //EIF==========================
        if (rBtnSEIF.isSelected()){
            txtEIFCalc.setText(Integer.toString(Integer.parseInt(txtEIF.getText())*(Integer.parseInt(rBtnSEIF.getText()))));
        }
        if (rBtnAEIF.isSelected()){
            txtEIFCalc.setText(Integer.toString(Integer.parseInt(txtEIF.getText())*(Integer.parseInt(rBtnAEIF.getText()))));
        }
        if (rBtnCEIF.isSelected()){
            txtEIFCalc.setText(Integer.toString(Integer.parseInt(txtEIF.getText())*(Integer.parseInt(rBtnCEIF.getText()))));
        }
        
       
            //Integer.parseInt(txtEI.getText());
            txtTCCalc.setText( Integer.toString(Integer.parseInt(txtEICalc.getText())+Integer.parseInt(txtEOCalc.getText())+Integer.parseInt(txtEInqCalc.getText())+Integer.parseInt(txtILFCalc.getText())+Integer.parseInt(txtEIFCalc.getText())));
            double functionalPoint = Double.parseDouble(txtTCCalc.getText())*(0.65+(0.01*(Integer.parseInt(txtVA.getText()))));
            //System.out.println(functionalPoint);
            Double fp = new Double(functionalPoint);
            float f = fp.floatValue();
            txtComputeFP.setText(Float.toString(f));
        }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please input all values");
        }
        
        
    }
    
    private void btnComputeFPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComputeFPActionPerformed
        // TODO add your handling code here:
        this.calculationOfFP();
    }//GEN-LAST:event_btnComputeFPActionPerformed

    private void btnChangeLangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeLangActionPerformed
        // TODO add your handling code here:
        ChangeLanguage l = new ChangeLanguage(fp);
        l.setVisible(true);
    }//GEN-LAST:event_btnChangeLangActionPerformed

    private void txtVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVAActionPerformed

    
    
    private void btnCCSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCCSActionPerformed
        // TODO add your handling code here:
        
        this.calculationOfFP();
        
        try {
        Float d = Float.parseFloat(txtComputeFP.getText());
        
        if (txtLang.getText().equals("None")){
            JOptionPane.showMessageDialog(null, "Please select a Language");
        }
        
        if (txtLang.getText().equals("Assembler")){
            txtCCS.setText(Float.toString(d * 209));
    
        }
        if (txtLang.getText().equals("Ada")){
            txtCCS.setText(Float.toString(d * 154));
            
        }
        if (txtLang.getText().equals("C")){
            txtCCS.setText(Float.toString(d * 148));
            
        }
        if (txtLang.getText().equals("C++")){
            txtCCS.setText(Float.toString(d * 59));
            
        }
        if (txtLang.getText().equals("C#")){
            txtCCS.setText(Float.toString(d * 58));
            
        }
        if (txtLang.getText().equals("COBOL")){
            txtCCS.setText(Float.toString(d * 80));
            
        }
        if (txtLang.getText().equals("Fortran")){
            txtCCS.setText(Float.toString(d * 90));
            
        }
        if (txtLang.getText().equals("HTML")){
            txtCCS.setText(Float.toString(d * 43));
            
        }
        if (txtLang.getText().equals("Java")){
            txtCCS.setText(Float.toString(d * 55));
            
        }
        if (txtLang.getText().equals("Java Script")){
            txtCCS.setText(Float.toString(d * 54));
            
        }
        if (txtLang.getText().equals("VB Script")){
            txtCCS.setText(Float.toString(d * 38));
            
        }
        if (txtLang.getText().equals("Visual Basic")){
            txtCCS.setText(Float.toString(d * 50));
            
        }
        }
        catch(Exception e){
            
        }
       
    }//GEN-LAST:event_btnCCSActionPerformed

    private void txtEIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEIFocusLost
        // TODO add your handling code here:
        try{
            if (txtEI.getText().isEmpty()){
                txtEI.setText("");
            }
            else
            if (Integer.parseInt(txtEI.getText()) < 0) {
                JOptionPane.showMessageDialog(this, "Negative value not allowed.");
                txtEI.setText("");
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please input integer values.");
            txtEI.setText("");
        }
    }//GEN-LAST:event_txtEIFocusLost

    private void txtEOFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEOFocusLost
        // TODO add your handling code here:
        try{
            if (txtEO.getText().isEmpty()){
                txtEO.setText("");
            }
            else
            if (Integer.parseInt(txtEO.getText()) < 0){
                JOptionPane.showMessageDialog(this, "Negative value not allowed.");
                txtEO.setText("");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please input integer values.");
            txtEO.setText("");
        }
    }//GEN-LAST:event_txtEOFocusLost

    private void txtEInqFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEInqFocusLost
        // TODO add your handling code here:
        try{
            if (txtEInq.getText().isEmpty()){
                txtEInq.setText("");
            }
            else
            if (Integer.parseInt(txtEInq.getText()) < 0){
                JOptionPane.showMessageDialog(this, "Negative value not allowed.");
                txtEInq.setText("");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please input integer values.");
            txtEInq.setText("");
        }
    }//GEN-LAST:event_txtEInqFocusLost

    private void txtILFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtILFFocusLost
        // TODO add your handling code here:
        try{
            if (txtILF.getText().isEmpty()){
                txtILF.setText("");
            }
            else
            if (Integer.parseInt(txtILF.getText()) < 0){
                JOptionPane.showMessageDialog(this, "Negative value not allowed.");
                txtILF.setText("");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please input integer values.");
            txtILF.setText("");
        }
    }//GEN-LAST:event_txtILFFocusLost

    private void txtEIFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEIFFocusLost
        // TODO add your handling code here:
        try{
            if (txtEIF.getText().isEmpty()){
                txtEIF.setText("");
            }
            else
            if (Integer.parseInt(txtEIF.getText()) < 0){
                JOptionPane.showMessageDialog(this, "Negative value not allowed.");
                txtEIF.setText("");
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please input integer values.");
            txtEIF.setText("");
        }
    }//GEN-LAST:event_txtEIFFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCCS;
    private javax.swing.JButton btnChangeLang;
    private javax.swing.JButton btnComputeFP;
    private javax.swing.ButtonGroup btnGrpEI;
    private javax.swing.ButtonGroup btnGrpEIF;
    private javax.swing.ButtonGroup btnGrpEInq;
    private javax.swing.ButtonGroup btnGrpEO;
    private javax.swing.ButtonGroup btnGrpILF;
    private javax.swing.JButton btnVA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAverage;
    private javax.swing.JLabel lblComplex;
    private javax.swing.JLabel lblEI;
    private javax.swing.JLabel lblEIF;
    private javax.swing.JLabel lblEInq;
    private javax.swing.JLabel lblEO;
    private javax.swing.JLabel lblILF;
    private javax.swing.JLabel lblSimple;
    private javax.swing.JLabel lblTotalCount;
    private javax.swing.JLabel lblWF;
    private javax.swing.JPanel pnlFunctionPoint;
    public javax.swing.JRadioButton rBtnAEI;
    public javax.swing.JRadioButton rBtnAEIF;
    public javax.swing.JRadioButton rBtnAEInq;
    public javax.swing.JRadioButton rBtnAEO;
    public javax.swing.JRadioButton rBtnAILF;
    public javax.swing.JRadioButton rBtnCEI;
    public javax.swing.JRadioButton rBtnCEIF;
    public javax.swing.JRadioButton rBtnCEInq;
    public javax.swing.JRadioButton rBtnCEO;
    public javax.swing.JRadioButton rBtnCILF;
    public javax.swing.JRadioButton rBtnSEI;
    public javax.swing.JRadioButton rBtnSEIF;
    public javax.swing.JRadioButton rBtnSEInq;
    public javax.swing.JRadioButton rBtnSEO;
    public javax.swing.JRadioButton rBtnSILF;
    public javax.swing.JTextField txtCCS;
    public javax.swing.JTextField txtComputeFP;
    public javax.swing.JTextField txtEI;
    public javax.swing.JTextField txtEICalc;
    public javax.swing.JTextField txtEIF;
    public javax.swing.JTextField txtEIFCalc;
    public javax.swing.JTextField txtEInq;
    public javax.swing.JTextField txtEInqCalc;
    public javax.swing.JTextField txtEO;
    public javax.swing.JTextField txtEOCalc;
    public javax.swing.JTextField txtILF;
    public javax.swing.JTextField txtILFCalc;
    public javax.swing.JTextField txtLang;
    public javax.swing.JTextField txtTCCalc;
    public javax.swing.JTextField txtVA;
    // End of variables declaration//GEN-END:variables
}
